// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProject5.Models;

namespace MiniProject5.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220605165836_AddedComposition")]
    partial class AddedComposition
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MiniProject5.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ClientType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdClient");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            ClientType = 0,
                            FirstName = "FirstName1",
                            LastName = "LastName1"
                        },
                        new
                        {
                            IdClient = 2,
                            ClientType = 0,
                            FirstName = "FirstName2",
                            LastName = "LastName2"
                        },
                        new
                        {
                            IdClient = 3,
                            ClientType = 0,
                            FirstName = "FirstName3",
                            LastName = "LastName3"
                        });
                });

            modelBuilder.Entity("MiniProject5.Models.ClientMovie", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdMovie")
                        .HasColumnType("int");

                    b.HasKey("IdClient", "IdMovie")
                        .HasName("Client_Movie_PK");

                    b.HasIndex("IdMovie");

                    b.ToTable("ClientMovie");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            IdMovie = 1
                        },
                        new
                        {
                            IdClient = 2,
                            IdMovie = 2
                        },
                        new
                        {
                            IdClient = 3,
                            IdMovie = 3
                        });
                });

            modelBuilder.Entity("MiniProject5.Models.Contact", b =>
                {
                    b.Property<int>("IdContact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContact");

                    b.HasIndex("IdClient");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            IdContact = 1,
                            Email = "s21120@pjwstk.edu.pl",
                            IdClient = 1,
                            Phone = "+48333333333"
                        },
                        new
                        {
                            IdContact = 2,
                            Email = "s21121@pjwstk.edu.pl",
                            IdClient = 2,
                            Phone = "+48334433333"
                        },
                        new
                        {
                            IdContact = 3,
                            Email = "s21122@pjwstk.edu.pl",
                            IdClient = 3,
                            Phone = "+48335533333"
                        });
                });

            modelBuilder.Entity("MiniProject5.Models.Movie", b =>
                {
                    b.Property<int>("IdMovie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double>("MovieCost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdMovie");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MiniProject5.Models.SeriesEpisode", b =>
                {
                    b.Property<int>("IdSeriesEpisode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("IdSeries")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdSeriesEpisode");

                    b.HasIndex("IdSeries");

                    b.ToTable("SeriesEpisode");

                    b.HasData(
                        new
                        {
                            IdSeriesEpisode = 1,
                            Description = "desc",
                            IdSeries = 1,
                            Name = "sr1ep1"
                        },
                        new
                        {
                            IdSeriesEpisode = 2,
                            Description = "desc",
                            IdSeries = 1,
                            Name = "sr1ep2"
                        },
                        new
                        {
                            IdSeriesEpisode = 3,
                            Description = "desc",
                            IdSeries = 2,
                            Name = "sr2ep1"
                        },
                        new
                        {
                            IdSeriesEpisode = 4,
                            Description = "desc",
                            IdSeries = 2,
                            Name = "sr2ep2"
                        });
                });

            modelBuilder.Entity("MiniProject5.Models.FeatureFilm", b =>
                {
                    b.HasBaseType("MiniProject5.Models.Movie");

                    b.ToTable("FeatureFilm");

                    b.HasData(
                        new
                        {
                            IdMovie = 3,
                            Description = "Description3",
                            MovieCost = 60.0,
                            Name = "Film3",
                            ReleaseDate = new DateTime(2015, 6, 5, 18, 58, 35, 957, DateTimeKind.Local).AddTicks(9764)
                        });
                });

            modelBuilder.Entity("MiniProject5.Models.Series", b =>
                {
                    b.HasBaseType("MiniProject5.Models.Movie");

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            IdMovie = 1,
                            Description = "Description1",
                            MovieCost = 50.0,
                            Name = "Series1",
                            ReleaseDate = new DateTime(2017, 6, 5, 18, 58, 35, 953, DateTimeKind.Local).AddTicks(745)
                        },
                        new
                        {
                            IdMovie = 2,
                            Description = "Description2",
                            MovieCost = 50.0,
                            Name = "Series2",
                            ReleaseDate = new DateTime(2019, 6, 5, 18, 58, 35, 957, DateTimeKind.Local).AddTicks(9081)
                        });
                });

            modelBuilder.Entity("MiniProject5.Models.ClientMovie", b =>
                {
                    b.HasOne("MiniProject5.Models.Client", "ClientNavigation")
                        .WithMany("ClientMovies")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniProject5.Models.Movie", "MovieNavigation")
                        .WithMany("ClientMovies")
                        .HasForeignKey("IdMovie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientNavigation");

                    b.Navigation("MovieNavigation");
                });

            modelBuilder.Entity("MiniProject5.Models.Contact", b =>
                {
                    b.HasOne("MiniProject5.Models.Client", "ClientNavigation")
                        .WithMany("ContactNavigation")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("MiniProject5.Models.SeriesEpisode", b =>
                {
                    b.HasOne("MiniProject5.Models.Series", "SeriesNavigation")
                        .WithMany("Episodes")
                        .HasForeignKey("IdSeries")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SeriesNavigation");
                });

            modelBuilder.Entity("MiniProject5.Models.FeatureFilm", b =>
                {
                    b.HasOne("MiniProject5.Models.Movie", null)
                        .WithOne()
                        .HasForeignKey("MiniProject5.Models.FeatureFilm", "IdMovie")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiniProject5.Models.Series", b =>
                {
                    b.HasOne("MiniProject5.Models.Movie", null)
                        .WithOne()
                        .HasForeignKey("MiniProject5.Models.Series", "IdMovie")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiniProject5.Models.Client", b =>
                {
                    b.Navigation("ClientMovies");

                    b.Navigation("ContactNavigation");
                });

            modelBuilder.Entity("MiniProject5.Models.Movie", b =>
                {
                    b.Navigation("ClientMovies");
                });

            modelBuilder.Entity("MiniProject5.Models.Series", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
